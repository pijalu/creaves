queries:
 - name: Annexe_2A_2024
   description: Annexe 2A 2024
   query: SELECT distinct
            a.id AS "ID",
            a.year AS "année",
            a.yearNumber AS "N°",
            a.species AS "Espèce",
            CASE
            WHEN s.subside_group="SG3" THEN "A) Mammifères non volants"
            WHEN s.subside_group="SG1" THEN "B) Rapaces, oiseaux d’eau, échassiers ou limicoles"
            WHEN s.subside_group="SG2" THEN "C) Autres oiseaux et chauves-souris, batraciens et reptiles"
            END AS "Groupe",
            DATE_FORMAT(i.date, "%d/%m/%Y") AS "Date d'Entrée",
            DATE_FORMAT(o.date, "%d/%m/%Y") AS "Date de Sortie",
            DATE_FORMAT(o.date, "%Y") AS "Année de Sortie",
            CASE
            WHEN oo.name="DCD" THEN "DCD"
            WHEN oo.name="Euthanasier" THEN "DCD"
            WHEN oo.name="Mort à l'arrivée avant l'encodage" THEN "DCD"
            WHEN oo.name="Relacher" THEN "Relacher"
            WHEN oo.name="Transferer" THEN "Transferer"
            WHEN oo.name="Adoption" THEN "Adoption"
            END AS "Raison de la sortie"
            FROM animals AS a
            INNER JOIN intakes AS i ON a.intake_id = i.id
            LEFT JOIN outtakes AS o ON a.outtake_id = o.id
            LEFT JOIN species AS s ON s.creaves_species = a.species
            LEFT JOIN outtaketypes AS oo ON o.outtaketype_id = oo.id
            Where s.subside_group IN("SG1","SG2","SG3") AND oo.error = 0 OR oo.error IS NULL
            ORDER BY a.id desc;
  
 - name: Annexe_2B_2024
   description: Annexe 2B 2024
   query: SELECT DISTINCT
            a.year AS "Année",
            CASE
            WHEN s.subside_group="SG3" THEN "A) Mammifères non volants (100/tranche)"
            WHEN s.subside_group="SG1" THEN "B) Rapaces, oiseaux d’eau, échassiers ou limicoles (50/tranche)"
            WHEN s.subside_group="SG2" THEN "C) Autres oiseaux et chauves-souris, batraciens et reptiles (100/tranche)"
            END AS "Groupes SUBSIDE",
            COUNT(Distinct a.id) AS "Nombre"
            From animals AS a
            INNER JOIN species AS s ON a.species = creaves_species
            INNER JOIN intakes AS i ON a.intake_id = i.id
            LEFT JOIN outtakes AS o ON a.outtake_id = o.id
            LEFT JOIN outtaketypes AS oo ON o.outtaketype_id = oo.id
            WHERE s.subside_group IN ("SG1","SG2","SG3") AND oo.error = 0 OR oo.error IS NULL
            GROUP BY 1, 2
            ORDER BY 1 DESC;

 - name: Annexe_2024
   description: Annexe au rapport 2024
   query: SELECT distinct
            a.year AS "année",
            CASE
            WHEN s.class="Aves" THEN "Oiseaux"
            WHEN s.order="Artiodactyla" THEN "Mammifères non volants"
            WHEN s.order="Carnivora" THEN "Mammifères non volants"
            WHEN s.order="Castorimorpha" THEN "Mammifères non volants"
            WHEN s.order="Caviomorpha" THEN "Mammifères non volants"
            WHEN s.order="Érinaceomorphes" THEN "Mammifères non volants"
            WHEN s.order="Eulipotyphla" THEN "Mammifères non volants"
            WHEN s.order="Lagomorpha" THEN "Mammifères non volants"
            WHEN s.order="Muroidea" THEN "Mammifères non volants"
            WHEN s.order="Musteloidea" THEN "Mammifères non volants"
            WHEN s.order="Pecora" THEN "Mammifères non volants"
            WHEN s.order="Rodentia" THEN "Mammifères non volants"
            WHEN s.order="Suina" THEN "Mammifères non volants"
            WHEN s.order="Viverroidea" THEN "Mammifères non volants"
            WHEN s.order="Chiroptera" THEN "Mammifères volants et autres espèces"
            WHEN s.class="Reptilia" THEN "Mammifères volants et autres espèces"
            WHEN s.class="Amphibia" THEN "Mammifères volants et autres espèces"
            END AS "Rapport Groupe",
            COUNT(Distinct a.id) AS "Nombre"
            FROM animals AS a
            INNER JOIN species AS s ON s.creaves_species = a.species
            LEFT JOIN outtakes AS o ON a.outtake_id = o.id
            LEFT JOIN outtaketypes AS oo ON o.outtaketype_id = oo.id
            Where oo.error = 0 OR oo.error IS NULL
            GROUP BY 1, 2
            ORDER BY 1 DESC;
  
 - name: detail_register
   description: Registre détaillé
   query: SELECT distinct
           a.year AS "année",
           a.id AS "ID",
           a.yearNumber AS "N°",
           a.species AS "Espèce", 
           if((a.species) = (s.creaves_species), "", "NON CONNUE") AS "Check",
           ta.name AS "Type",
           a.cage AS  "cage",
           a.ring AS "Identification",
           a.gender AS "Genre",
           aa.name AS "Age",
           DATE_FORMAT(i.date, "%d/%m/%Y") AS "Date d'entrée",
           DATE_FORMAT(i.date, "%H:%i") AS "Heure d'entrée",
           DATEDIFF (d.date, i.date) AS "dif découverte/admission",
           i.general AS "état général",
           i.wounds AS "Bléssures",
           i.parasites AS "Parasites",
           i.remarks AS "Remarque d'entrée",
           d.city AS "Ville",
           d.postal_code AS "Code postal",
           d.location AS "lieux de découverte",
           ec.cause AS "Cause d'entrée",
           d.reason As "Détails découverte",
           DATE_FORMAT(d.date, "%d/%m/%Y") AS "Date de découverte",
           DATE_FORMAT(d.date, "%H:%i") AS "Heure de découverte",
           d.note AS "Note sur la découverte",
           DATE_FORMAT(o.date, "%d/%m/%Y") AS "Date de sortie",
           DATE_FORMAT(o.date, "%H:%i") AS "Heure de sortie",
           oo.name AS "Raison de la sortie",
           o.location AS "Lieux de relacher",
           o.note As "Note sur la sortie",
           DATEDIFF (o.date, i.date) + 1 AS "séjour",
           di.firstname AS "Prénom",
           di.lastname AS "Nom",
           di.address AS "Adresse",
           di.city AS "Ville",
           di.country AS "Pays",
           di.note AS "Note",
           DATEDIFF (o.date, i.date) + 1 AS "séjour", 
           count(distinct vv.id) AS 'Nombre visite VT',
           sum(t.distance) AS "KM parcouru pour l'animal"
           FROM animals AS a
           INNER JOIN intakes AS i ON a.intake_id = i.id
           INNER JOIN discoveries AS d ON a.discovery_id = d.id
           INNER JOIN entry_causes AS ec ON d.entry_cause_id = ec.id
           INNER JOIN discoverers AS di ON d.discoverer_id = di.id
           INNER JOIN animalages AS aa ON a.animalage_id = aa.id
           INNER JOIN animaltypes AS ta ON a.animaltype_id = ta.id
           LEFT JOIN outtakes AS o ON a.outtake_id = o.id
           LEFT JOIN species AS s ON s.creaves_species = a.species
           LEFT JOIN outtaketypes AS oo ON o.outtaketype_id = oo.id
           LEFT JOIN veterinaryvisits AS vv ON a.id = vv.animal_id
           LEFT JOIN travels AS t ON t.animal_id = a.id
           WHERE oo.error = 0 OR oo.error IS NULL
           GROUP BY a.id
           ORDER BY 1 DESC, 2 ASC, 3 ASC;

 - name: register
   description: Registre
   query: SELECT distinct
            a.year AS "année",
            a.yearNumber AS "N°",
            a.species AS "Espèce", 
            a.ring AS "Identification",
            d.city AS "Ville découverte",
            d.postal_code AS "Code postal découverte",
            d.location AS "lieux de découverte",
            DATE_FORMAT(i.date, "%d/%m/%Y") AS "Date d'entrée",
            DATE_FORMAT(i.date, "%H:%i") AS "Heure d'entrée", 
            ec.cause AS "Cause d'entrée",
            d.reason As "Détails découverte",
            oo.name AS "Raison de la sortie",
            DATE_FORMAT(o.date, "%d/%m/%Y") AS "Date de sortie",
            DATE_FORMAT(o.date, "%H:%i") AS "Heure de sortie",
            o.location AS "Lieux de relacher"
            FROM animals AS a
            INNER JOIN intakes AS i ON a.intake_id = i.id
            INNER JOIN discoveries AS d ON a.discovery_id = d.id
            INNER JOIN entry_causes AS ec ON d.entry_cause_id = ec.id
            INNER JOIN discoverers AS di ON d.discoverer_id = di.id
            INNER JOIN animalages AS aa ON a.animalage_id = aa.id
            LEFT JOIN species AS s ON s.creaves_species = a.species
            LEFT JOIN outtakes AS o ON a.outtake_id = o.id
            LEFT JOIN outtaketypes AS oo ON o.outtaketype_id = oo.id
            WHERE oo.error = 0 OR oo.error IS NULL
            GROUP BY a.id
            ORDER BY 1 DESC, 2 ASC;
            
 - name: dead_register
   description: Registre des cadavres
   query: SELECT distinct
            a.year AS "année",
            a.yearNumber AS "N°",
            a.species AS "Espèce", 
            a.ring AS "Identification",
            i.date AS "Date d'entrée",
            oo.name AS "Raison de la sortie",
            o.date AS "Date de sortie"
            FROM animals AS a
            INNER JOIN intakes AS i ON a.intake_id = i.id
            INNER JOIN animalages AS aa ON a.animalage_id = aa.id
            LEFT JOIN species AS s ON s.creaves_species = a.species
            LEFT JOIN outtakes AS o ON a.outtake_id = o.id
            LEFT JOIN outtaketypes AS oo ON o.outtaketype_id = oo.id
            WHERE oo.dead = 1 AND oo.error = 0 OR oo.error IS NULL
            GROUP BY a.id
            ORDER BY 1 DESC, 2 ASC;

 - name: descoverer_register
   description: Registre des découvreurs
   query: SELECT
           a.year AS "Année",
           a.id, 
           a.yearNumber AS "numéro annuel",
           a.species AS "espèce", DATE_FORMAT(i.date, "%d %m %Y") AS "Date d'entrée",
           ot.name AS "raison de sortie",
           di.firstname AS "Prénom",
           di.lastname AS "Nom",
           di.address AS "adresse",
           di.city AS "ville",
           di.email AS "mail", 
           di.phone AS "téléphone", 
           di.donation AS "Don",
           di.note AS "Note sur la découverte"
           FROM animals AS a
           INNER JOIN intakes AS i ON a.intake_id = i.id
           INNER JOIN discoveries AS d ON a.discovery_id = d.id
           LEFT jOIN outtakes AS o ON a.outtake_id = o.id
           LEFT JOIN outtaketypes AS ot ON ot.id = o.outtaketype_id,
           discoverers di WHERE d.discoverer_id = di.id
           GROUP BY a.id
           ORDER BY 1 DESC, 2 ASC, 3 ASC;
           
 - name: donation_register
   description: Registre des dons
   query: SELECT
           year(di.created_at) as "Année", 
           DATE_FORMAT(di.created_at, "%Y %m %d") AS "Date du don",
           di.firstname AS "Prénom",
           di.lastname AS "Nom",
           di.address AS "Adresse",
           di.postal_code AS "Code postal",
           di.city AS "ville",
           di.email AS "mail", 
           di.phone AS "Téléphone", 
           di.donation AS "Don"
           FROM discoverers AS di
           WHERE di.donation > "0,01"
           ORDER BY 1 DESC, 2 ASC, 3 ASC, 4 ASC, 5 ASC, 6 ASC, 7 ASC;
           
 - name: species_registre
   description: Registre détailé des espèces
   query: SELECT DISTINCT
           a.year AS "Année",
           a.yearNumber AS "N°",
           a.species AS "Espèce",
           s.family AS "Famille",
           s.order AS "Ordre",
           s.class AS "Classe",
           s.agw_group AS "CREAVES Groupes",
           CASE
           WHEN s.game=0 THEN ""
           WHEN s.game=1 THEN "Gibier"
           END AS "Gibier",
           CASE
           WHEN s.huntable=0 THEN ""
           WHEN s.huntable=1 THEN "Chassable"
           END AS "Chassable",
           d.location AS "lieux de découverte",
           i.date AS "Date d'entrée",
           d.reason As "Cause de découverte",
           oo.name AS "Raison de la sortie",
           o.date AS "Date de sortie"
           FROM animals AS a
           INNER JOIN intakes AS i ON a.intake_id = i.id
           INNER JOIN discoveries AS d ON a.discovery_id = d.id
           INNER JOIN discoverers AS di ON d.discoverer_id = di.id
           INNER JOIN animalages AS aa ON a.animalage_id = aa.id
           LEFT JOIN species AS s ON s.creaves_species = a.species
           LEFT JOIN outtakes AS o ON a.outtake_id = o.id
           LEFT JOIN outtaketypes AS oo ON o.outtaketype_id = oo.id
           WHERE oo.error = 0 OR oo.error IS NULL
           ORDER BY 1 DESC, 2 ASC;

 - name: entry_age
   description: "Age à l'entrée"
   query: SELECT
           a.year AS "Année", 
           aa.name AS "Age à l'Entrée",
           COUNT(*) AS "Nombre"
           From animals AS a
           INNER JOIN animalages AS aa ON a.animalage_id = aa.id
           LEFT JOIN outtakes AS o ON a.outtake_id = o.id
           LEFT JOIN outtaketypes AS oo ON o.outtaketype_id = oo.id
           WHERE oo.error = 0 OR oo.error IS NULL
           GROUP BY 1, a.animalage_id
           ORDER BY 1 DESC, 2 ASC

 - name: sortie_reason
   description: Causes de sortie
   query: SELECT DISTINCT 
           a.year AS "Année",
           ot.name AS "Causes de sortie",
           COUNT(*) AS "Nombre"
           From animals AS a
           INNER JOIN outtakes AS o ON a.outtake_id = o.id
           INNER JOIN outtaketypes AS ot ON ot.id = o.outtaketype_id
           WHERE ot.error = 0 OR ot.error IS NULL
           GROUP BY 1, ot.name
           ORDER BY 1 DESC, 2 ASC;

 - name: sortie_types
   description: Types de sortie
   query: SELECT DISTINCT
           a.year AS "Année",
           CASE
           WHEN oo.rating=-1 THEN "Animal sorti Mort"
           WHEN oo.rating=0 THEN "La sortie est Neutre"
           WHEN oo.rating=1 THEN "Animal sorti Vivant"
           END AS "Type de sortie",
           COUNT(*) AS "Nombre"
           From animals AS a
           INNER JOIN outtakes AS o ON a.outtake_id = o.id
           LEFT JOIN outtaketypes AS oo ON o.outtaketype_id = oo.id
           WHERE oo.error = 0 OR oo.error IS NULL
           GROUP BY 1, oo.rating
           ORDER BY 1 DESC, 2 ASC;

 - name: entry_date_year
   description: "Nombre d'animaux accueillis selon le jour de l'année"
   query: SELECT 
            year(i.date) as "Année", 
            date_format(i.date, "%Y %m %d") AS "Date d'Entrée", 
            COUNT(*) AS "Nombre"
            From intakes AS i
            GROUP BY 1, 2
            ORDER BY 1 DESC, 2 ASC;
          
 - name: entry_day_week
   description: "Nombre d'animaux accueillis selon le jour de la semaine"
   query: SELECT Year(i.date) AS "Année", 
            Dayofweek(i.date) AS "numéro jour de la semaine - (1=dimanche)",  
            COUNT(*) AS "Nombre"
            FROM intakes AS i
            GROUP BY 1, 2
            ORDER BY 1 DESC, 2 ASC;

 - name: day_to_month
   description: "Nombre d'animaux accueillis selon le mois"
   query: SELECT 
           Year(i.date) AS "Année",
           DATE_FORMAT(i.date, "%m") AS "Mois d'Entrée", 
           COUNT(*) AS "Nombre d'Animaux"
           From intakes AS i
           GROUP BY 1, DATE_FORMAT(i.date, "%m")
           ORDER BY 1 DESC, DATE_FORMAT(i.date, "%m") ASC;

 - name: treatments_day_year
   description: "Nombre de traitement selon le jour de l'année"
   query: SELECT Year(date) AS "Année",
           DATE_FORMAT(date, "%Y %m %d") AS "Date de traitement", 
           COUNT(*) AS "Nombre"
           From treatments
           GROUP BY 1, DATE_FORMAT(date, "%Y %m %d")
           ORDER BY 1 DESC, DATE_FORMAT(date, "%Y %m %d") ASC;

 - name: animals_species
   description: "Nombre d'animaux accueillis selon l'éspece"
   query: SELECT 
           year AS "Année",
           sp.creaves_species AS "Espèce",
           COUNT(Distinct a.id) AS "Nombre"
           From animals AS a
           INNER JOIN species AS sp ON a.species = creaves_species
           LEFT JOIN outtakes AS o ON a.outtake_id = o.id
           LEFT JOIN outtaketypes AS oo ON o.outtaketype_id = oo.id
           Where oo.error = 0 OR oo.error IS NULL
           GROUP BY 1, sp.creaves_species
           ORDER BY 1 DESC, 3 DESC;

 - name: AGW_group
   description: "Nombre d'animaux accueillis selon le groupe du SPW CREAVES"
   query: SELECT
           year AS "Année",
           sp.agw_group AS "CREAVES Groupe",
           COUNT(Distinct a.id) AS "Nombre"
           From animals AS a
           INNER JOIN species AS sp ON a.species = creaves_species
           INNER JOIN intakes AS i ON a.intake_id = i.id
           LEFT JOIN outtakes AS o ON a.outtake_id = o.id
           LEFT JOIN outtaketypes AS oo ON o.outtaketype_id = oo.id
           WHERE oo.error = 0 OR oo.error IS NULL
           GROUP BY 1, sp.agw_group
           ORDER BY 1 DESC, sp.agw_group ASC;

 - name: animals_types
   description: "Nombre d'animaux accueillis selon le type"
   query: SELECT 
           a.year as "Année",
           t.name AS "Type",
           COUNT(*) AS "Nombre"
           From animals AS a
           LEFT JOIN intakes i ON a.intake_id = i.id
           INNER JOIN animaltypes AS t ON a.animaltype_id = t.id
           LEFT JOIN outtakes AS o ON a.outtake_id = o.id
           LEFT JOIN outtaketypes AS oo ON o.outtaketype_id = oo.id
           WHERE oo.error = 0 OR oo.error IS NULL
           GROUP BY 1, a.animaltype_id
           ORDER BY 1 DESC, 2 ASC;

 - name: animals_family
   description: "Nombre d'animaux accueillis selon la famille"
   query: SELECT 
           year AS "Année",
           sp.family AS "Famille",
           COUNT(Distinct a.id) AS "Nombre"
           From animals AS a
           INNER JOIN species AS sp ON a.species = creaves_species
           LEFT JOIN outtakes AS o ON a.outtake_id = o.id
           LEFT JOIN outtaketypes AS oo ON o.outtaketype_id = oo.id
           WHERE oo.error = 0 OR oo.error IS NULL
           GROUP BY 1, sp.family
           ORDER BY 1 DESC, sp.family ASC;

 - name: animals_order
   description: Nombre d'animaux accueillis selon l'ordre
   query: SELECT
           year AS "Année",
           sp.order AS "Ordre",
           COUNT(Distinct a.id) AS "Nombre"
           From animals AS a
           INNER JOIN species AS sp ON a.species = creaves_species
           LEFT JOIN outtakes AS o ON a.outtake_id = o.id
           LEFT JOIN outtaketypes AS oo ON o.outtaketype_id = oo.id
           WHERE oo.error = 0 OR oo.error IS NULL
           GROUP BY 1,sp.order
           ORDER BY 1 DESC, sp.order ASC;

 - name: animals_class
   description: "Nombre d'animaux accueillis selon la classe"
   query: SELECT DISTINCT
           year AS "Année",
           sp.class AS "Classe",
           COUNT(Distinct a.id) AS "Nombre"
           From animals AS a
           INNER JOIN species AS sp ON a.species = creaves_species
           LEFT JOIN outtakes AS o ON a.outtake_id = o.id
           LEFT JOIN outtaketypes AS oo ON o.outtaketype_id = oo.id
           WHERE oo.error = 0 OR oo.error IS NULL
           GROUP BY 1, sp.class
           ORDER BY 1 DESC, sp.class ASC;

 - name: animals_game
   description: Espèce gibier accueillie
   query: SELECT 
           year AS "Année",
           sp.creaves_species AS "Espèce",
           COUNT(Distinct a.id) AS "Nombre"
           From animals AS a
           INNER JOIN species AS sp ON a.species = creaves_species
           LEFT JOIN outtakes AS o ON a.outtake_id = o.id
           LEFT JOIN outtaketypes AS oo ON o.outtaketype_id = oo.id
           WHERE sp.game = 1 AND oo.error = 0 OR oo.error IS NULL
           GROUP BY 1, sp.creaves_species
           ORDER BY 1 DESC, sp.creaves_species ASC;

 - name: animals_huntable
   description: Espèce chassable accueillie
   query: SELECT 
           year AS "Année",
           sp.creaves_species AS "Espèce",
           COUNT(Distinct a.id) AS "Nombre"
           From animals AS a
           INNER JOIN species AS sp ON a.species = creaves_species
           LEFT JOIN outtakes AS o ON a.outtake_id = o.id
           LEFT JOIN outtaketypes AS oo ON o.outtaketype_id = oo.id
           WHERE sp.huntable = 1 AND oo.error = 0 OR oo.error IS NULL
           GROUP BY 1, sp.creaves_species
           ORDER BY 1 DESC, sp.creaves_species ASC;

 - name: native_status
   description: "Statut d'indigénat"
   query: SELECT
            year AS "Année",
            ns.status AS "Statut",
           COUNT(Distinct a.id) AS "Nombre"
           From animals AS a
           INNER JOIN species AS sp ON a.species = creaves_species
           INNER JOIN native_statuses AS ns ON sp.native_status = ns.id
           LEFT JOIN outtakes AS o ON a.outtake_id = o.id
           LEFT JOIN outtaketypes AS oo ON o.outtaketype_id = oo.id
            Where oo.error = 0 OR oo.error IS NULL
           GROUP BY 1, ns.status
           ORDER BY 1 DESC, 3 DESC;
           
 - name: entry_causes_détail
   description: "Causes d'entrée détail"
   query: SELECT 
           year AS "Année",
           ec.nature AS "Nature de la cause",
           ec.cause AS "Cause",
           ec.detail AS "Cause détail",
           COUNT(Distinct a.id) AS "Nombre"
           From animals AS a
           INNER JOIN discoveries AS d ON a.discovery_id = d.id
           INNER JOIN entry_causes AS ec ON d.entry_cause_id = ec.id
           LEFT JOIN outtakes AS o ON a.outtake_id = o.id
           LEFT JOIN outtaketypes AS oo ON o.outtaketype_id = oo.id
           Where oo.error = 0 OR oo.error IS NULL
           GROUP BY 1, ec.nature, ec.cause, ec.detail
           ORDER BY 1 DESC, 5 DESC;

 - name: entry_causes
   description: "Causes d'entrée"
   query: SELECT 
           year AS "Année",
           ec.cause AS "Cause",
           COUNT(Distinct a.id) AS "Nombre"
           From animals AS a
           INNER JOIN discoveries AS d ON a.discovery_id = d.id
           INNER JOIN entry_causes AS ec ON d.entry_cause_id = ec.id
           LEFT JOIN outtakes AS o ON a.outtake_id = o.id
           LEFT JOIN outtaketypes AS oo ON o.outtaketype_id = oo.id
          Where oo.error = 0 OR oo.error IS NULL
           GROUP BY 1, ec.cause
           ORDER BY 1 DESC, 3 DESC;

 - name: nature_entry_causes
   description: "Nature des causes d'entrée"
   query: SELECT 
           year AS "Année",
           ec.nature AS "Nature des causes d'entrée",
           COUNT(Distinct a.id) AS "Nombre"
           From animals AS a
           INNER JOIN discoveries AS d ON a.discovery_id = d.id
           INNER JOIN entry_causes AS ec ON d.entry_cause_id = ec.id
           LEFT JOIN outtakes AS o ON a.outtake_id = o.id
           LEFT JOIN outtaketypes AS oo ON o.outtaketype_id = oo.id
           Where oo.error = 0 OR oo.error IS NULL
           GROUP BY 1, ec.nature
           ORDER BY 1 DESC, 3 DESC;
           
 - name: animal_gavage
   description: Animaux en gavage
   query: SELECT
            a.yearNumber AS "N°",
            ta.name AS "Type",
            a.species AS "Espèce", 
            a.zone AS "Zone",
            a.cage AS  "Cage",
            a.ring AS "Identification",
            a.feeding AS "Alimentation"
            FROM animals AS a
              INNER JOIN animaltypes AS ta ON a.animaltype_id = ta.id
              LEFT JOIN outtakes AS o ON a.outtake_id = o.id
              WHERE o.date IS null AND force_feed = 1
              GROUP BY a.id
              ORDER BY a.zone asc, a.species asc, a.cage asc, a.id asc;

 - name: controle_espèce
   description: "Animaux avec un nom d'espèce inconnue"
   query: select a.year AS "Année", a.yearNumber AS "N°", a.species AS "Espèce"
            from animals a
            where a.species not in(select creaves_species from species)

 - name: Nombre
   description: "Nombre d'animaux dans l'année"
   query: SELECT
            a.year AS "année",
            COUNT(Distinct a.id) AS "Nombre"
           From animals AS a
            LEFT JOIN outtakes AS o ON a.outtake_id = o.id
            LEFT JOIN outtaketypes AS oo ON o.outtaketype_id = oo.id
            Where oo.error = 0 OR oo.error IS NULL
            GROUP BY 1
            ORDER BY 1 DESC;
            
            
            
